name: CI CD

on: pull_request

jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['8.0.x']
        
    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Build
        run: dotnet build ./TecnoMundo/TecnoMundo.sln

  code_format:
    needs: build
    name: Code Format
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Install CSharpier
      run: dotnet tool install -g csharpier

    - name: Check for formatting issues
      run: dotnet csharpier .

  deploy_cart:
    name: Deploy CartAPI in Docker Hub
    needs: [build, code_format]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['8.0.x']

    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Log-in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push CartAPI
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./TecnoMundo/TecnoMundo.CartAPI
          file: ./TecnoMundo/TecnoMundo.CartAPI/Dockerfile
          push: true
          tags: ${{ vars.DOCKER_IMAGE_NAME_CART }}
      
      - name: Log-out from Docker Hub
        run: docker logout

  deploy_coupon:
    name: Deploy CouponAPI in Docker Hub
    needs: [build, code_format]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['8.0.x']

    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Log-in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push CouponAPI
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./TecnoMundo/TecnoMundo.CouponAPI
          file: ./TecnoMundo/TecnoMundo.CouponAPI/Dockerfile
          push: true
          tags: ${{ vars.DOCKER_IMAGE_NAME_COUPON }}
      
      - name: Log-out from Docker Hub
        run: docker logout

  deploy_identity:
    name: Deploy IdentityAPI in Docker Hub
    needs: [build, code_format]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['8.0.x']

    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Log-in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push IdentityAPI
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./TecnoMundo/TecnoMundo.IdentityAPI
          file: ./TecnoMundo/TecnoMundo.IdentityAPI/Dockerfile
          push: true
          tags: ${{ vars.DOCKER_IMAGE_NAME_IDENTITY }}
      
      - name: Log-out from Docker Hub
        run: docker logout

  deploy_order:
    name: Deploy OrderAPI in Docker Hub
    needs: [build, code_format]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['8.0.x']

    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Log-in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push OrderAPI
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./TecnoMundo/TecnoMundo.OrderAPI
          file: ./TecnoMundo/TecnoMundo.OrderAPI/Dockerfile
          push: true
          tags: ${{ vars.DOCKER_IMAGE_NAME_ORDER }}
      
      - name: Log-out from Docker Hub
        run: docker logout

  deploy_payment:
    name: Deploy PaymentAPI in Docker Hub
    needs: [build, code_format]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['8.0.x']

    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Log-in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push PaymentAPI
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./TecnoMundo/TecnoMundo.PaymentAPI
          file: ./TecnoMundo/TecnoMundo.PaymentAPI/Dockerfile
          push: true
          tags: ${{ vars.DOCKER_IMAGE_NAME_PAYMENT }}
      
      - name: Log-out from Docker Hub
        run: docker logout

  deploy_product:
    name: Deploy ProductAPI in Docker Hub
    needs: [build, code_format]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['8.0.x']

    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Log-in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push ProductAPI
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./TecnoMundo/TecnoMundo.ProductAPI
          file: ./TecnoMundo/TecnoMundo.ProductAPI/Dockerfile
          push: true
          tags: ${{ vars.DOCKER_IMAGE_NAME_PRODUCT }}
      
      - name: Log-out from Docker Hub
        run: docker logout
